Archive member included because of file (symbol)

/opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                              desafio2_TETA.o (xprintf)
/opt/pic32mx/lib/libm.a(w_acos32.o)
                              desafio2_TETA.o (acos)
/opt/pic32mx/lib/libm.a(cos32.o)
                              mr32.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              mr32.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              desafio2_TETA.o (__subdf3)
/opt/pic32mx/lib/libm.a(w_sqrt.o)
                              desafio2_TETA.o (sqrt)
/opt/pic32mx/lib/libm.a(s_lib_ver.o)
                              /opt/pic32mx/lib/libm.a(w_acos32.o) (math_errhandling)
/opt/pic32mx/lib/libm.a(acos32.o)
                              /opt/pic32mx/lib/libm.a(w_acos32.o) (__mchp_acos)
/opt/pic32mx/lib/libm.a(asncon32.o)
                              /opt/pic32mx/lib/libm.a(acos32.o) (_asncon)
/opt/pic32mx/lib/libm.a(sqrt32.o)
                              /opt/pic32mx/lib/libm.a(acos32.o) (exsqrt)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libm.a(w_acos32.o) (errno)
/opt/pic32mx/lib/libc.a(exit.o)
                              mr32.o (exit)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               mr32.o
sensor_dir          0x4               desafio2_TETA.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
sensor_frente       0x4               desafio2_TETA.o
tick20ms            0x4               mr32.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
xx                  0x8ca0            desafio2_TETA.o
sensor_esq          0x4               desafio2_TETA.o
tt                  0x8ca0            desafio2_TETA.o
tick40ms            0x4               mr32.o
yy                  0x8ca0            desafio2_TETA.o
tick160ms           0x4               mr32.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
analogSensors       0x18              mr32.o
tick10ms            0x4               mr32.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0x57b0       22448  Application's executable code 
.rodata                 0x9d006bb0          0x1a8         424  Read-only constant data 
.data                   0x9d006d58          0x194         404  Data-initialization template 
.sdata                  0x9d006eec           0x14          20  Small data-initialization template 
      Total kseg0_program_mem used  :      0x5b00       23296  4.5% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x2c          44  1.1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x5ddc       24028  4.6% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x194         404  Initialized data 
.sdata                  0xa0000194           0x14          20  Small initialized data 
.sbss                   0xa00001a8          0x118         280  Small uninitialized data 
.bss                    0xa00002c0        0x1a750      108368  Uninitialized data 
.stack                  0xa001aa10         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :     0x1ca10      117264  89.5% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :     0x1ca10      117264  89.5% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD desafio2_TETA.o
LOAD mr32.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x8
 *(.vector_7)
 .vector_7      0x000000009d0002e0        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x8
 *(.vector_8)
 .vector_8      0x000000009d000300        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x8
 *(.vector_19)
 .vector_19     0x000000009d000460        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400     0x57b0
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400      0xdc4 desafio2_TETA.o
                0x000000009d0014bc                Rodar_Sobre_Si
                0x000000009d001a3c                return_Home
                0x000000009d0020c0                ANDAR2
                0x000000009d001430                Stop_robot
                0x000000009d001754                Chegada_Farol
                0x000000009d0015a4                Fim
                0x000000009d001498                andar_frente
                0x000000009d001958                Ver_Farol
                0x000000009d001468                Ajusta_Esq
                0x000000009d001d6c                arraySize
                0x000000009d0017c0                rotateRel_naive
                0x000000009d001424                stop_Motors
                0x000000009d0014b0                Rodar_Sobre_Si_Esq
                0x000000009d001400                TimeOut
                0x000000009d001e3c                main
                0x000000009d0015f4                Run_Beacon
                0x000000009d001474                Ajusta_Dir
                0x000000009d0014c8                randomDecisionRotate
                0x000000009d001480                Vira_Dir
                0x000000009d0014a4                Rodar_Sobre_Si_Dir
                0x000000009d00148c                Vira_esq
                0x000000009d001d74                storePosition
 .text          0x000000009d0021c4     0x11fc mr32.o
                0x000000009d002bfc                normalizeAngle
                0x000000009d002b58                pid
                0x000000009d003228                isr_enc_left
                0x000000009d0021c4                setServoPos
                0x000000009d0032e0                isr_enc_right
                0x000000009d00230c                readAnalogSensors
                0x000000009d00284c                getRobotPos
                0x000000009d002268                updateBatteryVoltage
                0x000000009d0033b0                __gxx_personality_v0
                0x000000009d003024                isr_t2
                0x000000009d002880                led
                0x000000009d00292c                setSP2
                0x000000009d0028dc                leds
                0x000000009d002fe4                wait
                0x000000009d002410                initPIC32
                0x000000009d0029b4                readEncoders
                0x000000009d002ed0                delay
                0x000000009d00297c                setVel2
                0x000000009d002920                batteryVoltage
                0x000000009d002968                setPWM2
                0x000000009d002ce4                updateLocalization
                0x000000009d0029e0                actuateMotors
                0x000000009d002f1c                readLineSensors
                0x000000009d0029ac                closedLoopControl
                0x000000009d0028fc                obstacleSensor
 .text          0x000000009d0033c0      0x990 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                0x000000009d0033c8                xprintf
 .text.acos     0x000000009d003d50       0xac /opt/pic32mx/lib/libm.a(w_acos32.o)
                0x000000009d003d50                acos
 .text          0x000000009d003dfc      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x000000009d003dfc                cos
                0x000000009d003dfc                dpcos
 .text          0x000000009d003f9c      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x000000009d003f9c                dpsin
                0x000000009d003f9c                sin
 .text          0x000000009d004134      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x000000009d004134                reduct
 .text          0x000000009d0042e8      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x000000009d0044bc                exadd
                0x000000009d0043f0                exmul
                0x000000009d0042e8                sigmax
                0x000000009d004658                exdiv
                0x000000009d0045a8                exsub
 .text          0x000000009d0048bc     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x000000009d00596c                fabs
                0x000000009d005830                __eqdf2
                0x000000009d005830                __gtdf2
                0x000000009d0048bc                dpsub
                0x000000009d0054c4                __floatsidf
                0x000000009d005830                __ltdf2
                0x000000009d005538                ultodp
                0x000000009d004ce8                dpmul
                0x000000009d00562c                dptofp
                0x000000009d0057ac                __fixunsdfsi
                0x000000009d005830                dpcmp
                0x000000009d005588                __extendsfdf2
                0x000000009d0048c4                __adddf3
                0x000000009d0057ac                dptoul
                0x000000009d005010                dpdiv
                0x000000009d0054c4                litodp
                0x000000009d005724                __fixdfsi
                0x000000009d005830                __ledf2
                0x000000009d005588                fptodp
                0x000000009d005954                __negdf2
                0x000000009d0048c4                dpadd
                0x000000009d005010                __divdf3
                0x000000009d004ce8                __muldf3
                0x000000009d00562c                __truncdfsf2
                0x000000009d005830                __nedf2
                0x000000009d005724                dptoli
                0x000000009d005988                nan
                0x000000009d00596c                dpfabs
                0x000000009d005830                __gedf2
                0x000000009d005988                dpnan
                0x000000009d0048bc                __subdf3
 .text.sqrt     0x000000009d0059e4       0x80 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                0x000000009d0059e4                sqrt
 .text          0x000000009d005a64      0x35c /opt/pic32mx/lib/libm.a(acos32.o)
                0x000000009d005a64                dpacos
                0x000000009d005a64                __mchp_acos
 .text          0x000000009d005dc0      0x5bc /opt/pic32mx/lib/libm.a(sqrt32.o)
                0x000000009d006058                __mchp_sqrt
                0x000000009d005dc0                exsqrt
                0x000000009d006058                dpsqrt
 .text.exit     0x000000009d00637c       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x000000009d00637c                exit
 .text._cleanup
                0x000000009d006398       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x000000009d006398                _cleanup
 .text._exit    0x000000009d0063f8        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x000000009d0063f8                _exit
 .text.fclose   0x000000009d006400      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x000000009d006400                fclose
 .text.fflush   0x000000009d006514       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x000000009d006514                fflush
 .text._bufallo
                0x000000009d0065d8       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d0065d8                _bufallo
 .text._buffree
                0x000000009d006630       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d006630                _buffree
 .text.getpagesize
                0x000000009d006640        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d006640                getpagesize
 .text._stub_sbd_memlayout
                0x000000009d006648       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d006648                _stub_sbd_memlayout
                0x000000009d006648                _sbd_memlayout
 .text._sbrk_init
                0x000000009d006674      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d006674                _sbrk_init
 .text._sbrk    0x000000009d0067cc       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d0067cc                _sbrk
 .text.sbrk     0x000000009d006888       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d006888                sbrk
 .text.write    0x000000009d0068fc       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x000000009d0068fc                write
 .text.remove   0x000000009d0069a4        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x000000009d0069a4                remove
 .text.close    0x000000009d0069ac        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x000000009d0069ac                close
 .text          0x000000009d0069b4       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x000000009d0069b4                memset
 .text._mon_putc
                0x000000009d006a5c       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x000000009d006a5c                _mon_putc
 .text          0x000000009d006b00       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d006b70                printStr
                0x000000009d006b50                printInt
                0x000000009d006b30                readInt
                0x000000009d006ba8                resetCoreTimer
                0x000000009d006b20                putChar
                0x000000009d006b80                readStr
                0x000000009d006b90                exxt
                0x000000009d006b60                printInt10
                0x000000009d006b00                inkey
                0x000000009d006b10                getChar
                0x000000009d006b40                readInt10
                0x000000009d006ba0                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d006bb0                _text_end = .

.rodata         0x000000009d006bb0      0x1a8
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x000000009d006bb0       0x52 desafio2_TETA.o
                                         0x54 (size before relaxing)
 *fill*         0x000000009d006c02        0x6 00
 .rodata.cst8   0x000000009d006c08       0x28 desafio2_TETA.o
 .rodata        0x000000009d006c30       0x18 desafio2_TETA.o
 .rodata        0x000000009d006c48       0x10 mr32.o
                0x000000009d006c4c                KI_num
                0x000000009d006c54                KP_num
                0x000000009d006c48                KI_den
                0x000000009d006c50                KP_den
 .rodata.cst8   0x000000009d006c58       0x30 mr32.o
                                         0x38 (size before relaxing)
 .rodata.str1.4
                0x000000009d006c88       0x11 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x14 (size before relaxing)
 *fill*         0x000000009d006c99        0x7 00
 .rodata.cst8   0x000000009d006ca0       0x10 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x20 (size before relaxing)
 .rodata        0x000000009d006cb0       0x84 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 *fill*         0x000000009d006d34        0x4 00
 .rodata.cst8   0x000000009d006d38        0x8 /opt/pic32mx/lib/libm.a(w_acos32.o)
 .rodata        0x000000009d006d40       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d006d58                . = ALIGN (0x4)
 *fill*         0x000000009d006d55        0x3 00

.sdata2         0x000000009d006d58        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d006d58                . = ALIGN (0x4)

.sbss2          0x000000009d006d58        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d006d58                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x194 load address 0x000000009d006d58
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000       0x18 mr32.o
 .data          0x00000000a0000018       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0x00000000a0000018                sincon
                0x00000000a0000050                coscon
 .data.math_errhandling_flag
                0x00000000a0000088        0x4 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
                0x00000000a0000088                math_errhandling
 .data          0x00000000a000008c       0x68 /opt/pic32mx/lib/libm.a(asncon32.o)
                0x00000000a000008c                _asncon
 .data          0x00000000a00000f4       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00000f4                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d006d58                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a0008190                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a0000194       0x14 load address 0x000000009d006eec
                0x00000000a0000194                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a0000194        0x4 desafio2_TETA.o
                0x00000000a0000194                countCiclos
 .sdata         0x00000000a0000198        0x8 mr32.o
                0x00000000a0000198                SERVO_WIDTH_MAX
                0x00000000a000019c                SERVO_WIDTH_MIN
 .sdata         0x00000000a00001a0        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00001a0                _Files
 .sdata         0x00000000a00001a4        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0x00000000a00001a4                __C32_UART
                0x00000000a00001a8                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a00001a8                . = ALIGN (0x4)
                0x00000000a00001a8                _data_end = .
                0x00000000a00001a8                _bss_begin = .

.sbss           0x00000000a00001a8      0x118
                0x00000000a00001a8                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a00001a8       0x48 desafio2_TETA.o
                0x00000000a00001cc                indexA
                0x00000000a00001d8                reset
                0x00000000a00001e4                estado
                0x00000000a00001dc                farolsen
                0x00000000a00001d0                countRodarFarol
                0x00000000a00001b8                counterFarol
                0x00000000a00001c8                test
                0x00000000a00001bc                indexInvert
                0x00000000a00001c4                stateRondomDecision
                0x00000000a00001e0                linha
                0x00000000a00001b0                anguloInicial
                0x00000000a00001a8                detectLine
                0x00000000a00001d4                ciclos
                0x00000000a00001c0                stop
 .sbss          0x00000000a00001f0       0x90 mr32.o
 .sbss          0x00000000a0000280        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0x00000000a0000284        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x00000000a0000288                _minbrk
                0x00000000a0000284                _maxbrk
 *(.scommon)
 .scommon       0x00000000a0000290        0xc desafio2_TETA.o
                0x00000000a0000290                sensor_dir
                0x00000000a0000294                sensor_frente
                0x00000000a0000298                sensor_esq
 .scommon       0x00000000a000029c       0x14 mr32.o
                0x00000000a000029c                tick80ms
                0x00000000a00002a0                tick20ms
                0x00000000a00002a4                tick40ms
                0x00000000a00002a8                tick160ms
                0x00000000a00002ac                tick10ms
 .scommon       0x00000000a00002b0        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0x00000000a00002b0                errno
 .scommon       0x00000000a00002b4        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x00000000a00002b4                _atexitptr
 .scommon       0x00000000a00002b8        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00002b8                _outdone
 *fill*         0x00000000a00002b9        0x3 00
 .scommon       0x00000000a00002bc        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0x00000000a00002bc                _tfilesptr
                0x00000000a00002c0                _sbss_end = .

.bss            0x00000000a00002c0    0x1a750
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a00002c0      0x100 mr32.o
 .bss           0x00000000a00003c0       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0x00000000a00003d8    0x1a5e0 desafio2_TETA.o
                0x00000000a00003d8                xx
                0x00000000a0009078                tt
                0x00000000a0011d18                yy
 COMMON         0x00000000a001a9b8       0x18 mr32.o
                0x00000000a001a9b8                analogSensors
 COMMON         0x00000000a001a9d0       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a001a9d0                _sibuf
                0x00000000a001a9f0                _sobuf
                0x00000000a001aa10                . = ALIGN (0x4)
                0x00000000a001aa10                . = ALIGN (0x4)
                0x00000000a001aa10                _end = .
                0x00000000a001aa10                _bss_end = .

.persist        0x00000000a001aa10        0x0
 *(.persist)
                0x00000000a001aa10                . = ALIGN (0x4)

.heap           0x00000000a001aa10        0x0
                0x00000000a001aa10                _heap = .
                0x00000000a001aa10                . = (. + _min_heap_size)

.stack          0x00000000a001aa10     0x2000
                0x00000000a001aa10                _splim = .
                0x00000000a001aa10                _SPLIM = .
                0x00000000a001ca10                . = (. + _min_stack_size)
 *fill*         0x00000000a001aa10     0x2000 00

.ramfunc        0x00000000a001d000        0x0 load address 0x000000009d006f00
                0x00000000a001d000                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a001d000                . = ALIGN (0x4)
                0x00000000a001d000                _ramfunc_end = .
                0x000000009d006f00                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x000000000001d000                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0x8e0
 *(.pdr)
 .pdr           0x0000000000000000      0x2c0 desafio2_TETA.o
 .pdr           0x00000000000002c0      0x380 mr32.o
 .pdr           0x0000000000000640       0x40 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .pdr           0x0000000000000680       0x20 /opt/pic32mx/lib/libm.a(w_acos32.o)
 .pdr           0x00000000000006a0       0x20 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .pdr           0x00000000000006c0       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x00000000000006e0       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x0000000000000700       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x0000000000000720       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x0000000000000740       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x0000000000000760       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x00000000000007a0       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x0000000000000840       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x0000000000000860       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x0000000000000880       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x00000000000008a0       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x00000000000008c0       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 desafio2_TETA.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0x6f2
 *(.comment)
 .comment       0x0000000000000000       0x4d desafio2_TETA.o
 .comment       0x000000000000004d       0x4d mr32.o
 .comment       0x000000000000009a       0x4d /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .comment       0x00000000000000e7       0x4d /opt/pic32mx/lib/libm.a(w_acos32.o)
 .comment       0x0000000000000134       0x4d /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .comment       0x0000000000000181       0x4d /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .comment       0x00000000000001ce       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x000000000000021b       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x0000000000000268       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x00000000000002b5       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x0000000000000302       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x000000000000034f       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x000000000000039c       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x00000000000003e9       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x0000000000000436       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x0000000000000483       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x000000000000051b       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x0000000000000568       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x00000000000005b5       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x0000000000000602       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x0000000000000658       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x00000000000006a5       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x230
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 /opt/pic32mx/lib/libm.a(w_acos32.o)
 .debug_aranges
                0x0000000000000028       0x28 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_aranges
                0x0000000000000050       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x0000000000000078       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x00000000000000a0       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x00000000000000c8       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x00000000000000f0       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x0000000000000118       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x0000000000000148       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x0000000000000190       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x00000000000001b8       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x00000000000001e0       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x0000000000000208       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x0000000000000000      0x291
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1b /opt/pic32mx/lib/libm.a(w_acos32.o)
 .debug_pubnames
                0x000000000000001b       0x1b /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_pubnames
                0x0000000000000036       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x0000000000000052       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x000000000000006d       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x000000000000009b       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x00000000000000b7       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x0000000000000100       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x000000000000011d       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x000000000000013a       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x0000000000000166       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x0000000000000187       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x00000000000001fb       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x0000000000000217       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x0000000000000234       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x0000000000000250       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x0000000000000270       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x0000000000000000      0xe20
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x30 /opt/pic32mx/lib/libm.a(w_acos32.o)
 .debug_info    0x0000000000000030       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_info    0x0000000000000060       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x000000000000009f       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x0000000000000109      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x0000000000000248       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x0000000000000292      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x00000000000003e2      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x0000000000000544       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x0000000000000635      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x000000000000077a      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x00000000000008a1      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x0000000000000b23       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x0000000000000b9f       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x0000000000000c48       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x0000000000000ce6       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x0000000000000de1       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x0000000000000000      0x8a8
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x23 /opt/pic32mx/lib/libm.a(w_acos32.o)
 .debug_abbrev  0x0000000000000023       0x23 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_abbrev  0x0000000000000046        0x1 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .debug_abbrev  0x0000000000000047       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x0000000000000077       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x00000000000000d7       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x0000000000000194       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x00000000000001d5       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x0000000000000256       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x0000000000000322       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x00000000000003a2      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x00000000000004ab       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x000000000000053b      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x000000000000068e       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x0000000000000701       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x0000000000000780       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x00000000000007ef       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x0000000000000878       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x0000000000000000     0x1922
 *(.debug_line)
 .debug_line    0x0000000000000000       0x92 /opt/pic32mx/lib/libm.a(w_acos32.o)
 .debug_line    0x0000000000000092       0x90 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_line    0x0000000000000122      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x000000000000029e      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x000000000000043b      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x00000000000005f4       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x0000000000000692      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x0000000000000828      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x0000000000000a14      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x0000000000000bf8      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x0000000000000e50      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x0000000000000fe8      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x00000000000013ab       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x000000000000146d      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x0000000000001617      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x00000000000017c0       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x0000000000001893       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x0000000000000000      0x294
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x34 /opt/pic32mx/lib/libm.a(w_acos32.o)
 .debug_frame   0x0000000000000034       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_frame   0x0000000000000064       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x0000000000000090       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x00000000000000c0       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x00000000000000e0       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x0000000000000110       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x000000000000013c       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x0000000000000174       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x0000000000000200       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x0000000000000234       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x0000000000000254       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x0000000000000274       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x0000000000000000      0xa9b
 *(.debug_str)
 .debug_str     0x0000000000000000       0xbe /opt/pic32mx/lib/libm.a(w_acos32.o)
 .debug_str     0x00000000000000be       0x75 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                                         0xbc (size before relaxing)
 .debug_str     0x0000000000000133       0x72 /opt/pic32mx/lib/libc.a(errno.o)
                                         0xb9 (size before relaxing)
 .debug_str     0x00000000000001a5       0x8f /opt/pic32mx/lib/libc.a(exit.o)
                                         0xef (size before relaxing)
 .debug_str     0x0000000000000234       0xd4 /opt/pic32mx/lib/libc.a(stdclean.o)
                                        0x157 (size before relaxing)
 .debug_str     0x0000000000000308       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                         0xc2 (size before relaxing)
 .debug_str     0x000000000000037c       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                        0x14f (size before relaxing)
 .debug_str     0x0000000000000405       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                        0x14e (size before relaxing)
 .debug_str     0x0000000000000492       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                        0x135 (size before relaxing)
 .debug_str     0x0000000000000506       0xb6 /opt/pic32mx/lib/libc.a(buf.o)
                                        0x152 (size before relaxing)
 .debug_str     0x00000000000005bc       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                        0x147 (size before relaxing)
 .debug_str     0x0000000000000629      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                        0x19d (size before relaxing)
 .debug_str     0x000000000000072a       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                         0xd6 (size before relaxing)
 .debug_str     0x00000000000007ac       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                        0x16e (size before relaxing)
 .debug_str     0x0000000000000889       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                        0x160 (size before relaxing)
 .debug_str     0x000000000000094b       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                        0x13a (size before relaxing)
 .debug_str     0x0000000000000a2c       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                         0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x0000000000000000    0x14835
 *(.debug_macinfo)
 .debug_macinfo
                0x0000000000000000      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x0000000000000dbb      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x0000000000001971     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x00000000000037b8      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x00000000000040e7     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x0000000000005f35     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x0000000000007d9f     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x0000000000009bf8     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x000000000000bfad     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x000000000000ddf4     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x000000000000ef8d      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x000000000000f8bc     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x0000000000011703     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x000000000001354a      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x0000000000013f06      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(desafio2_TETA.elf elf32-tradlittlemips)

.mdebug.abi32   0x000000009d006f00        0x0

.rel.dyn        0x000000009d006f00        0x0

.debug_ranges   0x000000009d006f00       0x18
 .debug_ranges  0x000000009d006f00       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
