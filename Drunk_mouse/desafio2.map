Archive member included because of file (symbol)

/opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                              desafio2.o (xprintf)
/opt/pic32mx/lib/libm.a(cos32.o)
                              mr32.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              mr32.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              desafio2.o (__subdf3)
/opt/pic32mx/lib/libc.a(exit.o)
                              mr32.o (exit)
/opt/pic32mx/lib/libc.a(rand.o)
                              desafio2.o (rand)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (errno)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               mr32.o
sensor_dir          0x4               desafio2.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
sensor_frente       0x4               desafio2.o
tick20ms            0x4               mr32.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
sensor_esq          0x4               desafio2.o
tick40ms            0x4               mr32.o
tick160ms           0x4               mr32.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
analogSensors       0x18              mr32.o
tick10ms            0x4               mr32.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0x485c       18524  Application's executable code 
.rodata                 0x9d005c60          0x184         388  Read-only constant data 
.data                   0x9d005de4          0x128         296  Data-initialization template 
.sdata                  0x9d005f0c           0x14          20  Small data-initialization template 
      Total kseg0_program_mem used  :      0x4b1c       19228  3.7% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x2c          44  1.1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x4df8       19960  3.8% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x128         296  Initialized data 
.sdata                  0xa0000128           0x14          20  Small initialized data 
.sbss                   0xa0000140           0xf8         248  Small uninitialized data 
.bss                    0xa0000238          0x170         368  Uninitialized data 
.stack                  0xa00003a8         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x23a4        9124  7.0% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x23a4        9124  7.0% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD desafio2.o
LOAD mr32.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x8
 *(.vector_7)
 .vector_7      0x000000009d0002e0        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x8
 *(.vector_8)
 .vector_8      0x000000009d000300        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x8
 *(.vector_19)
 .vector_19     0x000000009d000460        0x8 mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400     0x485c
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400      0x838 desafio2.o
                0x000000009d001b94                servo_move
                0x000000009d0014b8                Rodar_Sobre_Si
                0x000000009d001400                Stop_robot
                0x000000009d0016f0                Chegada_Farol
                0x000000009d001520                Fim
                0x000000009d001494                andar_frente
                0x000000009d001900                Ver_Farol
                0x000000009d001464                Ajusta_Esq
                0x000000009d001774                rotateRel_naive
                0x000000009d001514                stop_Motors
                0x000000009d0014ac                Rodar_Sobre_Si_Esq
                0x000000009d001428                TimeOut
                0x000000009d001964                main
                0x000000009d00156c                Run_Beacon
                0x000000009d001470                Ajusta_Dir
                0x000000009d0014c4                randomDecisionRotate
                0x000000009d00147c                Vira_Dir
                0x000000009d0014a0                Rodar_Sobre_Si_Dir
                0x000000009d001488                Vira_esq
 .text          0x000000009d001c38     0x11fc mr32.o
                0x000000009d002670                normalizeAngle
                0x000000009d0025cc                pid
                0x000000009d002c9c                isr_enc_left
                0x000000009d001c38                setServoPos
                0x000000009d002d54                isr_enc_right
                0x000000009d001d80                readAnalogSensors
                0x000000009d0022c0                getRobotPos
                0x000000009d001cdc                updateBatteryVoltage
                0x000000009d002e24                __gxx_personality_v0
                0x000000009d002a98                isr_t2
                0x000000009d0022f4                led
                0x000000009d0023a0                setSP2
                0x000000009d002350                leds
                0x000000009d002a58                wait
                0x000000009d001e84                initPIC32
                0x000000009d002428                readEncoders
                0x000000009d002944                delay
                0x000000009d0023f0                setVel2
                0x000000009d002394                batteryVoltage
                0x000000009d0023dc                setPWM2
                0x000000009d002758                updateLocalization
                0x000000009d002454                actuateMotors
                0x000000009d002990                readLineSensors
                0x000000009d002420                closedLoopControl
                0x000000009d002370                obstacleSensor
 .text          0x000000009d002e34      0x990 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                0x000000009d002e3c                xprintf
 .text          0x000000009d0037c4      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x000000009d0037c4                cos
                0x000000009d0037c4                dpcos
 .text          0x000000009d003964      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x000000009d003964                dpsin
                0x000000009d003964                sin
 .text          0x000000009d003afc      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x000000009d003afc                reduct
 .text          0x000000009d003cb0      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x000000009d003e84                exadd
                0x000000009d003db8                exmul
                0x000000009d003cb0                sigmax
                0x000000009d004020                exdiv
                0x000000009d003f70                exsub
 .text          0x000000009d004284     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x000000009d005334                fabs
                0x000000009d0051f8                __eqdf2
                0x000000009d0051f8                __gtdf2
                0x000000009d004284                dpsub
                0x000000009d004e8c                __floatsidf
                0x000000009d0051f8                __ltdf2
                0x000000009d004f00                ultodp
                0x000000009d0046b0                dpmul
                0x000000009d004ff4                dptofp
                0x000000009d005174                __fixunsdfsi
                0x000000009d0051f8                dpcmp
                0x000000009d004f50                __extendsfdf2
                0x000000009d00428c                __adddf3
                0x000000009d005174                dptoul
                0x000000009d0049d8                dpdiv
                0x000000009d004e8c                litodp
                0x000000009d0050ec                __fixdfsi
                0x000000009d0051f8                __ledf2
                0x000000009d004f50                fptodp
                0x000000009d00531c                __negdf2
                0x000000009d00428c                dpadd
                0x000000009d0049d8                __divdf3
                0x000000009d0046b0                __muldf3
                0x000000009d004ff4                __truncdfsf2
                0x000000009d0051f8                __nedf2
                0x000000009d0050ec                dptoli
                0x000000009d005350                nan
                0x000000009d005334                dpfabs
                0x000000009d0051f8                __gedf2
                0x000000009d005350                dpnan
                0x000000009d004284                __subdf3
 .text.exit     0x000000009d0053ac       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x000000009d0053ac                exit
 .text.srand    0x000000009d0053c8       0x10 /opt/pic32mx/lib/libc.a(rand.o)
                0x000000009d0053c8                srand
 .text.rand     0x000000009d0053d8       0x6c /opt/pic32mx/lib/libc.a(rand.o)
                0x000000009d0053d8                rand
 .text._cleanup
                0x000000009d005444       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x000000009d005444                _cleanup
 .text._exit    0x000000009d0054a4        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x000000009d0054a4                _exit
 .text.fclose   0x000000009d0054ac      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x000000009d0054ac                fclose
 .text.fflush   0x000000009d0055c0       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x000000009d0055c0                fflush
 .text._bufallo
                0x000000009d005684       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d005684                _bufallo
 .text._buffree
                0x000000009d0056dc       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d0056dc                _buffree
 .text.getpagesize
                0x000000009d0056ec        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d0056ec                getpagesize
 .text._stub_sbd_memlayout
                0x000000009d0056f4       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d0056f4                _stub_sbd_memlayout
                0x000000009d0056f4                _sbd_memlayout
 .text._sbrk_init
                0x000000009d005720      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005720                _sbrk_init
 .text._sbrk    0x000000009d005878       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005878                _sbrk
 .text.sbrk     0x000000009d005934       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d005934                sbrk
 .text.write    0x000000009d0059a8       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x000000009d0059a8                write
 .text.remove   0x000000009d005a50        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x000000009d005a50                remove
 .text.close    0x000000009d005a58        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x000000009d005a58                close
 .text          0x000000009d005a60       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x000000009d005a60                memset
 .text._mon_putc
                0x000000009d005b08       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x000000009d005b08                _mon_putc
 .text          0x000000009d005bac       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d005c1c                printStr
                0x000000009d005bfc                printInt
                0x000000009d005bdc                readInt
                0x000000009d005c54                resetCoreTimer
                0x000000009d005bcc                putChar
                0x000000009d005c2c                readStr
                0x000000009d005c3c                exxt
                0x000000009d005c0c                printInt10
                0x000000009d005bac                inkey
                0x000000009d005bbc                getChar
                0x000000009d005bec                readInt10
                0x000000009d005c4c                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d005c5c                _text_end = .

.rodata         0x000000009d005c60      0x184
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x000000009d005c60       0x66 desafio2.o
                                         0x6c (size before relaxing)
 *fill*         0x000000009d005cc6        0x2 00
 .rodata.cst8   0x000000009d005cc8       0x10 desafio2.o
 .rodata        0x000000009d005cd8       0x10 mr32.o
                0x000000009d005cdc                KI_num
                0x000000009d005ce4                KP_num
                0x000000009d005cd8                KI_den
                0x000000009d005ce0                KP_den
 .rodata.cst8   0x000000009d005ce8       0x38 mr32.o
 .rodata.str1.4
                0x000000009d005d20       0x11 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x14 (size before relaxing)
 *fill*         0x000000009d005d31        0x7 00
 .rodata.cst8   0x000000009d005d38       0x10 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x20 (size before relaxing)
 .rodata        0x000000009d005d48       0x84 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .rodata        0x000000009d005dcc       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d005de4                . = ALIGN (0x4)
 *fill*         0x000000009d005de1        0x3 00

.sdata2         0x000000009d005de4        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d005de4                . = ALIGN (0x4)

.sbss2          0x000000009d005de4        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d005de4                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x128 load address 0x000000009d005de4
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000       0x18 mr32.o
 .data          0x00000000a0000018       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0x00000000a0000018                sincon
                0x00000000a0000050                coscon
 .data          0x00000000a0000088       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000088                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d005de4                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a0008120                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a0000128       0x14 load address 0x000000009d005f0c
                0x00000000a0000128                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a0000128        0x4 desafio2.o
 .sdata         0x00000000a000012c        0x8 mr32.o
                0x00000000a000012c                SERVO_WIDTH_MAX
                0x00000000a0000130                SERVO_WIDTH_MIN
 .sdata         0x00000000a0000134        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000134                _Files
 .sdata         0x00000000a0000138        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0x00000000a0000138                __C32_UART
                0x00000000a000013c                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a000013c                . = ALIGN (0x4)
                0x00000000a000013c                _data_end = .
                0x00000000a000013c                _bss_begin = .

.sbss           0x00000000a0000140       0xf8
                0x00000000a0000140                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a0000140       0x1c desafio2.o
                0x00000000a0000148                reset
                0x00000000a0000154                estado
                0x00000000a000014c                farolsen
                0x00000000a0000150                linha
                0x00000000a0000140                count
                0x00000000a0000144                ciclos
 *fill*         0x00000000a000015c        0x4 00
 .sbss          0x00000000a0000160       0x90 mr32.o
 .sbss          0x00000000a00001f0        0x8 /opt/pic32mx/lib/libc.a(rand.o)
 .sbss          0x00000000a00001f8        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0x00000000a00001fc        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x00000000a0000200                _minbrk
                0x00000000a00001fc                _maxbrk
 *(.scommon)
 .scommon       0x00000000a0000208        0xc desafio2.o
                0x00000000a0000208                sensor_dir
                0x00000000a000020c                sensor_frente
                0x00000000a0000210                sensor_esq
 .scommon       0x00000000a0000214       0x14 mr32.o
                0x00000000a0000214                tick80ms
                0x00000000a0000218                tick20ms
                0x00000000a000021c                tick40ms
                0x00000000a0000220                tick160ms
                0x00000000a0000224                tick10ms
 .scommon       0x00000000a0000228        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x00000000a0000228                _atexitptr
 .scommon       0x00000000a000022c        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a000022c                _outdone
 *fill*         0x00000000a000022d        0x3 00
 .scommon       0x00000000a0000230        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0x00000000a0000230                errno
 .scommon       0x00000000a0000234        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0x00000000a0000234                _tfilesptr
                0x00000000a0000238                _sbss_end = .

.bss            0x00000000a0000238      0x170
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a0000238      0x100 mr32.o
 .bss           0x00000000a0000338       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0x00000000a0000350       0x18 mr32.o
                0x00000000a0000350                analogSensors
 COMMON         0x00000000a0000368       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000368                _sibuf
                0x00000000a0000388                _sobuf
                0x00000000a00003a8                . = ALIGN (0x4)
                0x00000000a00003a8                . = ALIGN (0x4)
                0x00000000a00003a8                _end = .
                0x00000000a00003a8                _bss_end = .

.persist        0x00000000a00003a8        0x0
 *(.persist)
                0x00000000a00003a8                . = ALIGN (0x4)

.heap           0x00000000a00003a8        0x0
                0x00000000a00003a8                _heap = .
                0x00000000a00003a8                . = (. + _min_heap_size)

.stack          0x00000000a00003a8     0x2000
                0x00000000a00003a8                _splim = .
                0x00000000a00003a8                _SPLIM = .
                0x00000000a00023a8                . = (. + _min_stack_size)
 *fill*         0x00000000a00003a8     0x2000 00

.ramfunc        0x00000000a0002800        0x0 load address 0x000000009d005f20
                0x00000000a0002800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0002800                . = ALIGN (0x4)
                0x00000000a0002800                _ramfunc_end = .
                0x000000009d005f20                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x0000000000002800                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0x880
 *(.pdr)
 .pdr           0x0000000000000000      0x260 desafio2.o
 .pdr           0x0000000000000260      0x380 mr32.o
 .pdr           0x00000000000005e0       0x40 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .pdr           0x0000000000000620       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x0000000000000640       0x40 /opt/pic32mx/lib/libc.a(rand.o)
 .pdr           0x0000000000000680       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x00000000000006a0       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x00000000000006c0       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x00000000000006e0       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x0000000000000700       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x0000000000000740       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x00000000000007e0       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x0000000000000800       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x0000000000000820       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x0000000000000840       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x0000000000000860       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 desafio2.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0x658
 *(.comment)
 .comment       0x0000000000000000       0x4d desafio2.o
 .comment       0x000000000000004d       0x4d mr32.o
 .comment       0x000000000000009a       0x4d /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .comment       0x00000000000000e7       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x0000000000000134       0x4d /opt/pic32mx/lib/libc.a(rand.o)
 .comment       0x0000000000000181       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x00000000000001ce       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x000000000000021b       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x0000000000000268       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x00000000000002b5       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x0000000000000302       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x000000000000034f       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x000000000000039c       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x00000000000003e9       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x0000000000000481       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x00000000000004ce       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x000000000000051b       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x0000000000000568       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x00000000000005be       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x000000000000060b       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x210
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x0000000000000028       0x30 /opt/pic32mx/lib/libc.a(rand.o)
 .debug_aranges
                0x0000000000000058       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x0000000000000080       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x00000000000000a8       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x00000000000000d0       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x00000000000000f8       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x0000000000000128       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x0000000000000170       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x0000000000000198       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x00000000000001c0       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x00000000000001e8       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x0000000000000000      0x280
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x000000000000001b       0x25 /opt/pic32mx/lib/libc.a(rand.o)
 .debug_pubnames
                0x0000000000000040       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x000000000000006e       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x000000000000008a       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x00000000000000d3       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x00000000000000f0       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x000000000000010d       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x0000000000000139       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x0000000000000155       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x0000000000000176       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x00000000000001ea       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x0000000000000206       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x0000000000000223       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x000000000000023f       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x000000000000025f       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x0000000000000000      0xe5d
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x000000000000006a       0x9d /opt/pic32mx/lib/libc.a(rand.o)
 .debug_info    0x0000000000000107      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x0000000000000246       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x0000000000000290      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x00000000000003e0      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x0000000000000542       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x0000000000000633      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x0000000000000778       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x00000000000007b7      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x00000000000008de      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x0000000000000b60       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x0000000000000bdc       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x0000000000000c85       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x0000000000000d23       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x0000000000000e1e       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x0000000000000000      0x8d3
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x0000000000000060       0x72 /opt/pic32mx/lib/libc.a(rand.o)
 .debug_abbrev  0x00000000000000d2       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x000000000000018f       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x00000000000001d0       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x0000000000000251       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x000000000000031d       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x000000000000039d      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x00000000000004a6       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x00000000000004d6       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x0000000000000566      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x00000000000006b9       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x000000000000072c       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x00000000000007ab       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x000000000000081a       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x00000000000008a3       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x0000000000000000     0x19bf
 *(.debug_line)
 .debug_line    0x0000000000000000      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x000000000000019d      0x1bf /opt/pic32mx/lib/libc.a(rand.o)
 .debug_line    0x000000000000035c      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x0000000000000515       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x00000000000005b3      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x0000000000000749      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x0000000000000935      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x0000000000000b19      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x0000000000000d71      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x0000000000000eed      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x0000000000001085      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x0000000000001448       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x000000000000150a      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x00000000000016b4      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x000000000000185d       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x0000000000001930       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x0000000000000000      0x268
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x000000000000002c       0x38 /opt/pic32mx/lib/libc.a(rand.o)
 .debug_frame   0x0000000000000064       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x0000000000000094       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x00000000000000b4       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x00000000000000e4       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x0000000000000110       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x0000000000000148       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x00000000000001d4       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x0000000000000208       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x0000000000000228       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x0000000000000248       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x0000000000000000      0xa2c
 *(.debug_str)
 .debug_str     0x0000000000000000       0xd6 /opt/pic32mx/lib/libc.a(exit.o)
                                         0xef (size before relaxing)
 .debug_str     0x00000000000000d6       0x7d /opt/pic32mx/lib/libc.a(rand.o)
                                         0xf6 (size before relaxing)
 .debug_str     0x0000000000000153       0xd4 /opt/pic32mx/lib/libc.a(stdclean.o)
                                        0x157 (size before relaxing)
 .debug_str     0x0000000000000227       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                         0xc2 (size before relaxing)
 .debug_str     0x000000000000029b       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                        0x14f (size before relaxing)
 .debug_str     0x0000000000000324       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                        0x14e (size before relaxing)
 .debug_str     0x00000000000003b1       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                        0x135 (size before relaxing)
 .debug_str     0x0000000000000425       0xbc /opt/pic32mx/lib/libc.a(buf.o)
                                        0x152 (size before relaxing)
 .debug_str     0x00000000000004e1       0x6c /opt/pic32mx/lib/libc.a(errno.o)
                                         0xb9 (size before relaxing)
 .debug_str     0x000000000000054d       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                        0x147 (size before relaxing)
 .debug_str     0x00000000000005ba      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                        0x19d (size before relaxing)
 .debug_str     0x00000000000006bb       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                         0xd6 (size before relaxing)
 .debug_str     0x000000000000073d       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                        0x16e (size before relaxing)
 .debug_str     0x000000000000081a       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                        0x160 (size before relaxing)
 .debug_str     0x00000000000008dc       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                        0x13a (size before relaxing)
 .debug_str     0x00000000000009bd       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                         0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x0000000000000000    0x153eb
 *(.debug_macinfo)
 .debug_macinfo
                0x0000000000000000      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x0000000000000bb6      0xbb6 /opt/pic32mx/lib/libc.a(rand.o)
 .debug_macinfo
                0x000000000000176c     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x00000000000035b3      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x0000000000003ee2     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x0000000000005d30     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x0000000000007b9a     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x00000000000099f3     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x000000000000bda8      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x000000000000cb63     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x000000000000e9aa     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x000000000000fb43      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x0000000000010472     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x00000000000122b9     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x0000000000014100      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x0000000000014abc      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(desafio2.elf elf32-tradlittlemips)

.mdebug.abi32   0x000000009d005f20        0x0

.rel.dyn        0x000000009d005f20        0x0

.debug_ranges   0x000000009d005f20       0x18
 .debug_ranges  0x000000009d005f20       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
